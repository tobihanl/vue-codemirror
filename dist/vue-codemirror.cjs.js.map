{"version":3,"file":"vue-codemirror.cjs.js","sources":["../src/config.ts","../src/codemirror.ts","../src/events.ts","../src/props.ts","../src/component.ts","../src/index.ts"],"sourcesContent":["import { App, inject } from 'vue'\nimport { basicSetup } from 'codemirror'\nimport { ConfigProps } from './props'\n\nexport const DEFAULT_CONFIG: Readonly<Partial<ConfigProps>> = Object.freeze({\n  autofocus: false,\n  disabled: false,\n  indentWithTab: true,\n  tabSize: 2,\n  placeholder: '',\n  autoDestroy: true,\n  extensions: []\n})\n\nconst CONFIG_SYMBOL = Symbol('vue-codemirror-global-config')\nexport const injectGlobalConfig = (app: App, config?: ConfigProps) => {\n  app.provide(CONFIG_SYMBOL, config)\n}\n\nexport const useGlobalConfig = () => {\n  return inject<ConfigProps>(CONFIG_SYMBOL, {} as ConfigProps)\n}\n","import type { CSSProperties } from 'vue'\nimport { EditorState, EditorStateConfig, Compartment, Extension, StateEffect } from '@codemirror/state'\nimport { EditorView, EditorViewConfig, ViewUpdate, keymap, placeholder } from '@codemirror/view'\nimport { indentWithTab } from '@codemirror/commands'\nimport { indentUnit } from '@codemirror/language'\n\nexport interface CreateStateOptions extends EditorStateConfig {\n  onChange(doc: string, viewUpdate: ViewUpdate): void\n  onUpdate(viewUpdate: ViewUpdate): void\n  onFocus(viewUpdate: ViewUpdate): void\n  onBlur(viewUpdate: ViewUpdate): void\n}\n\nexport const createEditorState = ({ onUpdate, onChange, onFocus, onBlur, ...config }: CreateStateOptions) => {\n  return EditorState.create({\n    doc: config.doc,\n    selection: config.selection,\n    extensions: [\n      ...(Array.isArray(config.extensions) ? config.extensions : [config.extensions]),\n      EditorView.updateListener.of((viewUpdate) => {\n        // https://discuss.codemirror.net/t/codemirror-6-proper-way-to-listen-for-changes/2395/11\n        onUpdate(viewUpdate)\n        // doc changed\n        if (viewUpdate.docChanged) {\n          onChange(viewUpdate.state.doc.toString(), viewUpdate)\n        }\n        // focus state change\n        if (viewUpdate.focusChanged) {\n          viewUpdate.view.hasFocus ? onFocus(viewUpdate) : onBlur(viewUpdate)\n        }\n      })\n    ]\n  })\n}\n\nexport const createEditorView = (config: EditorViewConfig) => new EditorView({ ...config })\nexport const destroyEditorView = (view: EditorView) => view.destroy()\n\n// https://codemirror.net/examples/config/\n// https://github.com/uiwjs/react-codemirror/blob/22cc81971a/src/useCodeMirror.ts#L144\n// https://gist.github.com/s-cork/e7104bace090702f6acbc3004228f2cb\nexport const createEditorCompartment = (view: EditorView) => {\n  const compartment = new Compartment()\n  const run = (extension: Extension) => {\n    compartment.get(view.state)\n      ? view.dispatch({ effects: compartment.reconfigure(extension) }) // reconfigure\n      : view.dispatch({ effects: StateEffect.appendConfig.of(compartment.of(extension)) }) // inject\n  }\n  return { compartment, run }\n}\n\n// https://codemirror.net/examples/reconfigure/\nexport const createEditorExtensionToggler = (view: EditorView, extension: Extension) => {\n  const { compartment, run } = createEditorCompartment(view)\n  return (targetApply?: boolean) => {\n    const exExtension = compartment.get(view.state)\n    const apply = targetApply ?? exExtension !== extension\n    run(apply ? extension : [])\n  }\n}\n\nexport const getEditorTools = (view: EditorView) => {\n  // doc state\n  const getDoc = () => view.state.doc.toString()\n  const setDoc = (newDoc: string) => {\n    if (newDoc !== getDoc()) {\n      view.dispatch({\n        changes: {\n          from: 0,\n          to: view.state.doc.length,\n          insert: newDoc\n        }\n      })\n    }\n  }\n\n  // UX operations\n  const focus = () => view.focus()\n\n  // reconfigure extension\n  const { run: reExtensions } = createEditorCompartment(view)\n\n  // disabled editor\n  const toggleDisabled = createEditorExtensionToggler(view, [\n    EditorView.editable.of(false),\n    EditorState.readOnly.of(true)\n  ])\n\n  // https://codemirror.net/examples/tab/\n  const toggleIndentWithTab = createEditorExtensionToggler(view, keymap.of([indentWithTab]))\n\n  // tab size\n  // https://gist.github.com/s-cork/e7104bace090702f6acbc3004228f2cb\n  const { run: reTabSize } = createEditorCompartment(view)\n  const setTabSize = (tabSize: number) => {\n    reTabSize([EditorState.tabSize.of(tabSize), indentUnit.of(' '.repeat(tabSize))])\n  }\n\n  // phrases\n  // https://codemirror.net/examples/translate/\n  const { run: rePhrases } = createEditorCompartment(view)\n  const setPhrases = (phrases: Record<string, string>) => {\n    rePhrases([EditorState.phrases.of(phrases)])\n  }\n\n  // set editor's placeholder\n  const { run: rePlaceholder } = createEditorCompartment(view)\n  const setPlaceholder = (value: string) => {\n    rePlaceholder(placeholder(value))\n  }\n\n  // set style to editor element\n  // https://codemirror.net/examples/styling/\n  const { run: reStyle } = createEditorCompartment(view)\n  const setStyle = (style: CSSProperties = {}) => {\n    reStyle(EditorView.theme({ '&': { ...(style as any) } }))\n  }\n\n  return {\n    focus,\n    getDoc,\n    setDoc,\n    reExtensions,\n    toggleDisabled,\n    toggleIndentWithTab,\n    setTabSize,\n    setPhrases,\n    setPlaceholder,\n    setStyle\n  }\n}\n","import { EditorState } from '@codemirror/state'\nimport { EditorView, ViewUpdate } from '@codemirror/view'\n\nexport enum EventKey {\n  Change = 'change',\n  Update = 'update',\n  Focus = 'focus',\n  Blur = 'blur',\n  Ready = 'ready',\n  ModelUpdate = 'update:modelValue'\n}\n\nexport const editorEvents = {\n  // when content(doc) change only\n  [EventKey.Change]: (value: string, viewUpdate: ViewUpdate) => true,\n  // when codemirror state change\n  [EventKey.Update]: (viewUpdate: ViewUpdate) => true,\n  [EventKey.Focus]: (viewUpdate: ViewUpdate) => true,\n  [EventKey.Blur]: (viewUpdate: ViewUpdate) => true,\n  // when component mounted\n  [EventKey.Ready]: (payload: { view: EditorView; state: EditorState; container: HTMLDivElement }) => true\n}\n\nexport const modelUpdateEvent = {\n  [EventKey.ModelUpdate]: editorEvents[EventKey.Change]\n}\n\nexport const events = {\n  ...editorEvents,\n  ...modelUpdateEvent\n}\n\nexport type EditorEvents = typeof editorEvents\nexport type Events = typeof events\n","import type { CSSProperties } from 'vue'\nimport { PropType, ExtractPropTypes } from 'vue'\nimport { EditorStateConfig } from '@codemirror/state'\n\nconst UNDEFINED = void 0\nconst NonDefaultBooleanType = {\n  type: Boolean,\n  default: UNDEFINED\n}\n\nexport const configProps = {\n  autofocus: NonDefaultBooleanType,\n  disabled: NonDefaultBooleanType,\n  indentWithTab: NonDefaultBooleanType,\n  tabSize: Number,\n  placeholder: String,\n  style: Object as PropType<CSSProperties>,\n  autoDestroy: NonDefaultBooleanType,\n  phrases: Object as PropType<Record<string, string>>,\n  // codemirror options\n  root: Object as PropType<ShadowRoot | Document>,\n  extensions: Array as PropType<EditorStateConfig['extensions']>,\n  selection: Object as PropType<EditorStateConfig['selection']>\n}\n\nexport const modelValueProp = {\n  modelValue: {\n    type: String,\n    default: ''\n  }\n}\n\nexport const props = {\n  ...configProps,\n  ...modelValueProp\n}\n\nexport type ConfigProps = ExtractPropTypes<typeof configProps>\nexport type Props = ExtractPropTypes<typeof props>\nexport type PropKey = keyof Props\n","import { defineComponent, shallowRef, computed, watch, toRaw, onMounted, onBeforeUnmount, h } from 'vue'\nimport { EditorState } from '@codemirror/state'\nimport { EditorView } from '@codemirror/view'\nimport { createEditorState, createEditorView, destroyEditorView, getEditorTools } from './codemirror'\nimport { useGlobalConfig, DEFAULT_CONFIG } from './config'\nimport { props, ConfigProps } from './props'\nimport { events, EventKey } from './events'\n\nexport default defineComponent({\n  name: 'VueCodemirror',\n  props: { ...props },\n  emits: { ...events },\n  setup(props, context) {\n    const container = shallowRef<HTMLDivElement>()\n    const state = shallowRef<EditorState>()\n    const view = shallowRef<EditorView>()\n\n    const defaultConfig: ConfigProps = {\n      ...DEFAULT_CONFIG,\n      ...useGlobalConfig()\n    }\n\n    const config = computed<ConfigProps>(() => {\n      const result = {} as Required<ConfigProps>\n      Object.keys(toRaw(props)).forEach((key: any) => {\n        if (key !== 'modelValue') {\n          // @ts-ignore\n          // MARK: ensure access to `prop[key]` original object\n          result[key] = props[key] ?? defaultConfig[key]\n        }\n      })\n      return result\n    })\n\n    onMounted(() => {\n      state.value = createEditorState({\n        doc: props.modelValue,\n        selection: config.value.selection,\n        // The extensions are split into two parts, global and component prop.\n        // Only the global part is initialized here.\n        // The prop part is dynamically reconfigured after the component is mounted.\n        extensions: defaultConfig.extensions ?? [],\n        onFocus: (viewUpdate) => context.emit(EventKey.Focus, viewUpdate),\n        onBlur: (viewUpdate) => context.emit(EventKey.Blur, viewUpdate),\n        onUpdate: (viewUpdate) => context.emit(EventKey.Update, viewUpdate),\n        onChange: (newDoc, viewUpdate) => {\n          if (newDoc !== props.modelValue) {\n            context.emit(EventKey.Change, newDoc, viewUpdate)\n            context.emit(EventKey.ModelUpdate, newDoc, viewUpdate)\n          }\n        }\n      })\n\n      view.value = createEditorView({\n        state: state.value,\n        parent: container.value!,\n        root: config.value.root\n      })\n\n      const editorTools = getEditorTools(view.value)\n\n      // watch prop.modelValue\n      watch(\n        () => props.modelValue,\n        (newValue) => {\n          if (newValue !== editorTools.getDoc()) {\n            editorTools.setDoc(newValue)\n          }\n        }\n      )\n\n      // watch prop.extensions\n      watch(\n        () => props.extensions,\n        (extensions) => editorTools.reExtensions(extensions || []),\n        { immediate: true }\n      )\n\n      // watch prop.disabled\n      watch(\n        () => config.value.disabled,\n        (disabled) => editorTools.toggleDisabled(disabled),\n        { immediate: true }\n      )\n\n      // watch prop.indentWithTab\n      watch(\n        () => config.value.indentWithTab,\n        (iwt) => editorTools.toggleIndentWithTab(iwt),\n        { immediate: true }\n      )\n\n      // watch prop.tabSize\n      watch(\n        () => config.value.tabSize,\n        (tabSize) => editorTools.setTabSize(tabSize!),\n        { immediate: true }\n      )\n\n      // watch prop.phrases\n      watch(\n        () => config.value.phrases,\n        (phrases) => editorTools.setPhrases(phrases || {}),\n        { immediate: true }\n      )\n\n      // watch prop.placeholder\n      watch(\n        () => config.value.placeholder,\n        (placeholder) => editorTools.setPlaceholder(placeholder!),\n        { immediate: true }\n      )\n\n      // watch prop.style\n      watch(\n        () => config.value.style,\n        (style) => editorTools.setStyle(style),\n        { immediate: true }\n      )\n\n      // immediate autofocus\n      if (config.value.autofocus) {\n        editorTools.focus()\n      }\n\n      context.emit(EventKey.Ready, {\n        state: state.value!,\n        view: view.value!,\n        container: container.value!\n      })\n    })\n\n    onBeforeUnmount(() => {\n      if (config.value.autoDestroy && view.value) {\n        destroyEditorView(view.value)\n      }\n    })\n\n    return () => {\n      return h('div', {\n        class: 'v-codemirror',\n        style: { display: 'contents' },\n        ref: container\n      })\n    }\n  }\n})\n","import type { Plugin } from 'vue'\nimport type { Props } from './props'\nimport { injectGlobalConfig } from './config'\nimport Component from './component'\n\nexport type { Props } from './props'\nexport type { Events } from './events'\nexport { DEFAULT_CONFIG } from './config'\n\nexport const Codemirror = Component\nexport const install: Plugin = (app, defaultConfig?: Props) => {\n  app.component(Component.name, Component)\n  app.component('Codemirror', Component)\n  injectGlobalConfig(app, defaultConfig)\n}\n\nexport default {\n  Codemirror,\n  install\n}\n"],"names":["Object","defineProperty","exports","value","vue","require","state","view","commands","language","DEFAULT_CONFIG","freeze","autofocus","disabled","indentWithTab","tabSize","placeholder","autoDestroy","extensions","CONFIG_SYMBOL","Symbol","const","EventKey","createEditorState","_a","onUpdate","onChange","onFocus","onBlur","config","__rest","EditorState","create","doc","selection","Array","isArray","concat","EditorView","updateListener","of","viewUpdate","docChanged","toString","focusChanged","hasFocus","createEditorView","assign","createEditorCompartment","compartment","Compartment","run","extension","get","dispatch","effects","reconfigure","StateEffect","appendConfig","createEditorExtensionToggler","ref","targetApply","exExtension","getEditorTools","getDoc","reExtensions","toggleDisabled","editable","readOnly","toggleIndentWithTab","keymap","reTabSize","rePhrases","rePlaceholder","reStyle","focus","newDoc","changes","from","to","length","insert","indentUnit","repeat","phrases","style","theme","NonDefaultBooleanType","type","Boolean","default","configProps","Number","String","root","modelValueProp","modelValue","props","editorEvents","Change","Update","Focus","Blur","Ready","payload","modelUpdateEvent","ModelUpdate","events","Component","defineComponent","name","emits","setup","context","container","shallowRef","defaultConfig","inject","computed","result","keys","toRaw","forEach","key","onMounted","emit","parent","editorTools","watch","newValue","setDoc","immediate","iwt","setTabSize","setPhrases","setPlaceholder","setStyle","onBeforeUnmount","destroy","destroyEditorView","h","class","display","Codemirror","install","app","component","provide","injectGlobalConfig","index"],"mappings":"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"}